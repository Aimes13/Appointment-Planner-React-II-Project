{"ast":null,"code":"import _slicedToArray from \"C:\\\\Codecademy\\\\Projects\\\\Appointment Planner React II Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Codecademy\\\\Projects\\\\Appointment Planner React II Project\\\\src\\\\containers\\\\contactsPage\\\\ContactsPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nexport var ContactsPage = function ContactsPage(_ref) {\n  var contacts = _ref.contacts,\n    addContact = _ref.addContact;\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    phone = _useState4[0],\n    setPhone = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    duplicate = _useState8[0],\n    setDuplicate = _useState8[1];\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\n    if (!duplicate) {\n      addContact(name, phone, email);\n      setName('');\n      setPhone('');\n      setEmail('');\n    }\n  };\n\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n  useEffect(function () {\n    var checkDuplicate = function checkDuplicate() {\n      var checking = contacts.findIndex(function (contact) {\n        return contact.name === name;\n      });\n      if (checking !== -1) {\n        return true;\n      }\n      return false;\n    };\n    if (checkDuplicate()) {\n      setDuplicate(true);\n    } else {\n      setDuplicate(false);\n    }\n    ;\n  }, [name, contacts, duplicate]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Add Contact\"), /*#__PURE__*/React.createElement(ContactForm, {\n    name: name,\n    setName: setName,\n    phone: phone,\n    setPhone: setPhone,\n    email: email,\n    setEmail: setEmail,\n    handleSubmit: handleSubmit,\n    duplicate: duplicate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(TileList, {\n    tiles: contacts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","ContactsPage","_ref","contacts","addContact","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_useState5","_useState6","email","setEmail","_useState7","_useState8","duplicate","setDuplicate","handleSubmit","e","preventDefault","checkDuplicate","checking","findIndex","contact","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","tiles"],"sources":["C:/Codecademy/Projects/Appointment Planner React II Project/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ( {contacts, addContact} ) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n    if(!duplicate) {\r\n      addContact(name, phone, email);\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n     }\r\n    };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n  useEffect(() => {\r\n    const checkDuplicate = () => {\r\n      const checking = contacts.findIndex((contact) => contact.name === name);\r\n      if(checking !== -1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (checkDuplicate()) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    };\r\n  }, [name, contacts, duplicate]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm \r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone} \r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n          duplicate={duplicate} \r\n          /> \r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}